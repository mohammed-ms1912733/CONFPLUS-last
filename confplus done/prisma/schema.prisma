// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model paperAuthor {
  id       Int    @id @default(autoincrement())
  authorId Int?
  author   User?  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  paperId  Int?
  paper    Paper? @relation(fields: [paperId], references: [id], onDelete: Cascade)
    @@unique([authorId,paperId],name: "uniqueKey")

}

model Paper {
  id           Int            @id @default(autoincrement())
  title        String? 
  abstract     String?
  paperURL     String?
  isPresented Boolean?
  reviewers    String?
  reviews      Review[]
  authors      paperAuthor[]
  Presentation Presentation?
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String?
  lastName    String?
  email       String? @unique
  password    String?
  role        String?
  affiliation String?
  isPresenter Boolean       @default(false)
  papers      paperAuthor[]
  reviews     Review[]
}

model Review {
  id                 Int     @id @default(autoincrement())
  reviewerId         Int?
  reviewBy           User?   @relation(fields: [reviewerId], references: [id], onDelete: Cascade)
  paperId            Int?
  paper              Paper?  @relation(fields: [paperId], references: [id], onDelete: Cascade)
  weakness      String?
  strength     String?
  overallRating String?
  contribution  String?
  @@unique([reviewerId,paperId],name: "uniqueKey")
}

model Schedule {
  id            Int            @id @default(autoincrement())
  title         String?
  date          DateTime?
  location      String?
  presentations Presentation[]
}

model Presentation {
  id        Int       @id @default(autoincrement())
  startTime String?
  endTime   String?
  title String?
  paperId   Int @unique
  paper     Paper    @relation(fields: [paperId], references: [id], onDelete: Cascade)

  scheduleId Int?
  schedule   Schedule? @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
}
